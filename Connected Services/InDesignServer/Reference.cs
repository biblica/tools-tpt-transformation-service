//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InDesignServer
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:80/Service.wsdl", ConfigurationName="InDesignServer.ServicePortType")]
    public interface ServicePortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        InDesignServer.RunScriptResponse RunScript(InDesignServer.RunScriptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<InDesignServer.RunScriptResponse> RunScriptAsync(InDesignServer.RunScriptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        InDesignServer.BeginSessionResponse BeginSession(InDesignServer.BeginSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<InDesignServer.BeginSessionResponse> BeginSessionAsync(InDesignServer.BeginSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        InDesignServer.EndSessionResponse EndSession(InDesignServer.EndSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<InDesignServer.EndSessionResponse> EndSessionAsync(InDesignServer.EndSessionRequest request);
    }

    /// <remarks/>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.adobe.com/InDesign/soap/")]
    public partial class RunScriptParameters
    {
        
        private string scriptTextField;
        
        private string scriptLanguageField;
        
        private string scriptFileField;
        
        private IDSPScriptArg[] scriptArgsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string scriptText
        {
            get
            {
                return this.scriptTextField;
            }
            set
            {
                this.scriptTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public string scriptLanguage
        {
            get
            {
                return this.scriptLanguageField;
            }
            set
            {
                this.scriptLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=2)]
        public string scriptFile
        {
            get
            {
                return this.scriptFileField;
            }
            set
            {
                this.scriptFileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("scriptArgs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public IDSPScriptArg[] scriptArgs
        {
            get
            {
                return this.scriptArgsField;
            }
            set
            {
                this.scriptArgsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="IDSP-ScriptArg", Namespace="http://ns.adobe.com/InDesign/soap/")]
    public partial class IDSPScriptArg
    {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.adobe.com/InDesign/soap/")]
    public partial class Field
    {
        
        private ulong idField;
        
        private Data dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public ulong id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public Data data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.adobe.com/InDesign/soap/")]
    public partial class Data
    {
        
        private object dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ns.adobe.com/InDesign/soap/")]
    public partial class Object
    {
        
        private object specifierDataField;
        
        private ulong objectTypeField;
        
        private ulong specifierFormField;
        
        private Object startField;
        
        private Object endField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public object specifierData
        {
            get
            {
                return this.specifierDataField;
            }
            set
            {
                this.specifierDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public ulong objectType
        {
            get
            {
                return this.objectTypeField;
            }
            set
            {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public ulong specifierForm
        {
            get
            {
                return this.specifierFormField;
            }
            set
            {
                this.specifierFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public Object start
        {
            get
            {
                return this.startField;
            }
            set
            {
                this.startField = value;
            }
        }

        /// <remarks/>
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=4)]
        public Object end
        {
            get
            {
                return this.endField;
            }
            set
            {
                this.endField = value;
            }
        }
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunScript", WrapperNamespace="http://ns.adobe.com/InDesign/soap/", IsWrapped=true)]
    public partial class RunScriptRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ns.adobe.com/InDesign/soap/")]
        public uint sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.adobe.com/InDesign/soap/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public InDesignServer.RunScriptParameters runScriptParameters;
        
        public RunScriptRequest()
        {
        }
        
        public RunScriptRequest(uint sessionID, InDesignServer.RunScriptParameters runScriptParameters)
        {
            this.sessionID = sessionID;
            this.runScriptParameters = runScriptParameters;
        }
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunScriptResponse", WrapperNamespace="http://ns.adobe.com/InDesign/soap/", IsWrapped=true)]
    public partial class RunScriptResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.adobe.com/InDesign/soap/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int errorNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.adobe.com/InDesign/soap/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string errorString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.adobe.com/InDesign/soap/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public InDesignServer.Data scriptResult;
        
        public RunScriptResponse()
        {
        }
        
        public RunScriptResponse(int errorNumber, string errorString, InDesignServer.Data scriptResult)
        {
            this.errorNumber = errorNumber;
            this.errorString = errorString;
            this.scriptResult = scriptResult;
        }
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BeginSession", WrapperNamespace="http://ns.adobe.com/InDesign/soap/", IsWrapped=true)]
    public partial class BeginSessionRequest
    {
        
        public BeginSessionRequest()
        {
        }
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BeginSessionResponse", WrapperNamespace="http://ns.adobe.com/InDesign/soap/", IsWrapped=true)]
    public partial class BeginSessionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.adobe.com/InDesign/soap/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint sessionID;
        
        public BeginSessionResponse()
        {
        }
        
        public BeginSessionResponse(uint sessionID)
        {
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EndSession", WrapperNamespace="http://ns.adobe.com/InDesign/soap/", IsWrapped=true)]
    public partial class EndSessionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ns.adobe.com/InDesign/soap/")]
        public uint sessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="sessionID", Namespace="http://ns.adobe.com/InDesign/soap/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint sessionID1;
        
        public EndSessionRequest()
        {
        }
        
        public EndSessionRequest(uint sessionID, uint sessionID1)
        {
            this.sessionID = sessionID;
            this.sessionID1 = sessionID1;
        }
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Result", WrapperNamespace="http://ns.adobe.com/InDesign/soap/", IsWrapped=true)]
    public partial class EndSessionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ns.adobe.com/InDesign/soap/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int errorCode;
        
        public EndSessionResponse()
        {
        }
        
        public EndSessionResponse(int errorCode)
        {
            this.errorCode = errorCode;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface ServicePortTypeChannel : InDesignServer.ServicePortType, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class ServicePortTypeClient : System.ServiceModel.ClientBase<InDesignServer.ServicePortType>, InDesignServer.ServicePortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicePortTypeClient() : 
                base(ServicePortTypeClient.GetDefaultBinding(), ServicePortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.Service.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicePortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicePortTypeClient.GetBindingForEndpoint(endpointConfiguration), ServicePortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicePortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicePortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicePortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicePortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public virtual InDesignServer.RunScriptResponse RunScript(InDesignServer.RunScriptRequest request)
        {
            return base.Channel.RunScript(request);
        }
        
        public System.Threading.Tasks.Task<InDesignServer.RunScriptResponse> RunScriptAsync(InDesignServer.RunScriptRequest request)
        {
            return base.Channel.RunScriptAsync(request);
        }
        
        public InDesignServer.BeginSessionResponse BeginSession(InDesignServer.BeginSessionRequest request)
        {
            return base.Channel.BeginSession(request);
        }
        
        public System.Threading.Tasks.Task<InDesignServer.BeginSessionResponse> BeginSessionAsync(InDesignServer.BeginSessionRequest request)
        {
            return base.Channel.BeginSessionAsync(request);
        }
        
        public InDesignServer.EndSessionResponse EndSession(InDesignServer.EndSessionRequest request)
        {
            return base.Channel.EndSession(request);
        }
        
        public System.Threading.Tasks.Task<InDesignServer.EndSessionResponse> EndSessionAsync(InDesignServer.EndSessionRequest request)
        {
            return base.Channel.EndSessionAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Service))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Service))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:9876/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServicePortTypeClient.GetBindingForEndpoint(EndpointConfiguration.Service);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServicePortTypeClient.GetEndpointAddress(EndpointConfiguration.Service);
        }
        
        public enum EndpointConfiguration
        {
            
            Service,
        }
    }
}
