// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TptMain.Models;

namespace TptMain.Migrations
{
    [DbContext(typeof(TptServiceContext))]
    [Migration("20210408164818_tptservice_DT-185_add_bible-selection-params")]
    partial class tptservice_DT185_add_bibleselectionparams
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TptMain.Models.BibleSelectionParams", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IncludeAncillary")
                        .HasColumnType("bit");

                    b.Property<string>("SelectedBooks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BibleSelectionParams");
                });

            modelBuilder.Entity("TptMain.Models.PreviewJob", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BibleSelectionParamsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BookFormat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCancelled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("FontLeadingInPts")
                        .HasColumnType("real");

                    b.Property<float?>("FontSizeInPts")
                        .HasColumnType("real");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<float?>("PageHeaderInPts")
                        .HasColumnType("real");

                    b.Property<float?>("PageHeightInPts")
                        .HasColumnType("real");

                    b.Property<float?>("PageWidthInPts")
                        .HasColumnType("real");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<bool>("UseCustomFootnotes")
                        .HasColumnType("bit");

                    b.Property<bool>("UseProjectFont")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BibleSelectionParamsId");

                    b.ToTable("PreviewJobs");
                });

            modelBuilder.Entity("TptMain.Models.PreviewJob", b =>
                {
                    b.HasOne("TptMain.Models.BibleSelectionParams", "BibleSelectionParams")
                        .WithMany()
                        .HasForeignKey("BibleSelectionParamsId");

                    b.Navigation("BibleSelectionParams");
                });
#pragma warning restore 612, 618
        }
    }
}
